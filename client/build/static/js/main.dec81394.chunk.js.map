{"version":3,"sources":["actions/index.js","reducers/index.js","components/DoableForm.js","components/ReviewSection.js","components/Area.js","components/AreaSection.js","App.js","serviceWorker.js","index.js"],"names":["actionTypes","initialState","doables","id","name","notes","isResult","area","context","deadline","schedule","reminder","createdAt","Date","now","DoableForm","_Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","defaultFormState","state","saveable","data","handleSubmit","e","preventDefault","props","saveDoable","setState","type","objectSpread","handleInputChange","_ref","target","defineProperty","value","doable","componentWillMount","inherits","createClass","key","_this$state$data","react_default","a","createElement","assign","noValidate","styles","form","onSubmit","Input_default","placeholder","fullWidth","required","autoFocus","autofocus","onChange","disableUnderline","TextField_default","label","input","Fragment","NativeSelect_default","disabled","Button_default","variant","Component","style","maxWidth","height","margin","padding","display","flexDirection","alignItems","justifyContent","boxSizing","fontSize","overflow","width","connect","dispatch","reviewables","filter","lib_default","enableMouseEvents","map","i","components_DoableForm","container","Area","areas","Set","toConsumableArray","components_Area","renderAreas","App","axis","containerStyle","components_ReviewSection","components_AreaSection","Boolean","window","location","hostname","match","store","createStore","undefined","action","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.dec81394.chunk.js","sourcesContent":["\nexport const actionTypes = {\n  SAVE_DOABLE: 'SAVE_DOABLE'\n}\n\nexport const saveDoable = doable => ({\n  type: actionTypes.SAVE_DOABLE,\n  doable\n})\n","import { actionTypes } from '../actions';\n\nconst initialState = {\n  doables: [\n    {\n      id: 0,\n      name: 'get almond milk',\n      notes: 'http://amzn.eu/d/0KIJc45',\n      isResult: false,\n      area: '',\n      context: '',\n      deadline: '',\n      schedule: '',\n      reminder: '',\n      createdAt: Date.now()\n    },\n    {\n      id: 1,\n      name: 'rule the world',\n      notes: '',\n      isResult: false,\n      area: 'codeworks',\n      context: '',\n      deadline: '',\n      schedule: '',\n      reminder: '',\n      createdAt: Date.now()\n    },\n    {\n      id: 2,\n      name: 'call mom',\n      notes: '+41 44 761 69 49',\n      isResult: false,\n      area: '',\n      context: '',\n      deadline: '',\n      schedule: '',\n      reminder: '',\n      createdAt: Date.now()\n    }\n  ]\n}\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.SAVE_DOABLE:\n      let doables;\n      if ('id' in action.doable) { // checking if property id exist\n        doables = state.doables.map( doable => doable.id !== action.doable.id ? doable : action.doable )\n      } else doables = [\n        ...state.doables,\n          { id: state.doables.length, ...action.doable, createdAt: Date.now() }\n      ]\n      return ({\n        ...state,\n          doables\n      })\n\n    default:\n      return state;\n  }\n}","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Input from '@material-ui/core/Input';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport NativeSelect from '@material-ui/core/NativeSelect';\n// import CreatableSelect from 'react-select/lib/Creatable';\nimport { saveDoable } from '../actions';\n\n// TODO Consider a functional component with hooks instead of class\n\nexport class DoableForm extends Component {\n\n  defaultFormState = {\n    name: '',\n    notes: '',\n    isResult: '',\n    area: '',\n    context: '',\n    deadline: '',\n    schedule: '',\n    reminder: '',\n  }\n\n  state = {\n    saveable: false,\n    data: this.defaultFormState\n  }\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.saveDoable(this.state.data);\n    this.setState( state => {\n      if (this.props.type && this.props.type === 'quickEntry') {\n        return {...state, data: this.defaultFormState, saveable: false}\n      }\n      else return {...state, saveable: false}\n    });\n  }\n\n  handleInputChange = ({target}) => {\n    this.setState( state => {\n      const data = {...state.data, [target.name]: target.value };\n      const saveable = data.doable !== '';\n      return { ...state, saveable, data };\n    });\n  }\n\n  componentWillMount = () => {\n    if (this.props && this.props.data)\n      this.setState( state => ({ ...state, data: {...this.state.data, ...this.props.data} }) );\n  }\n\n  render() {\n    const { name, notes, area, context } = this.state.data;\n\n    return (\n        <form noValidate {...styles.form} onSubmit={this.handleSubmit}>\n          <Input\n            name=\"name\"\n            type=\"text\"\n            placeholder=\"what needs doing?\"\n            fullWidth\n            required\n            autoFocus={this.props.autofocus}\n            value={ name }\n            onChange={this.handleInputChange}\n            disableUnderline\n            {...styles.name }\n          />\n          <TextField\n            name=\"notes\"\n            label=\"Notes\"\n            fullWidth\n            value={ notes }\n            onChange={this.handleInputChange}\n            {...styles.input}\n          />\n          { !this.props.type &&\n          <React.Fragment>\n            {/* <CreatableSelect\n              isClearable\n              options={[{ label: 'Personal', value: 'personal' }, {label: 'Codeworks', value: 'codeworks' } ]}\n            /> */}\n            <NativeSelect\n              name='area'\n              value={ area }\n              onChange={this.handleInputChange}\n              {...styles.input }\n            >\n              <option value=\"\" disabled>Area</option>\n              <option value=\"home\">Home</option>\n              <option value=\"codeworks\">Codeworks</option>\n            </NativeSelect>\n            <NativeSelect\n              name='context'\n              value={ context }\n              onChange={this.handleInputChange}\n              {...styles.input }\n            >\n              <option value=\"\" disabled>Context</option>\n              <option value=\"home\">Home</option>\n              <option value=\"office\">Office</option>\n              <option value=\"commute\">Commute</option>\n              <option value=\"commute\">Mobile</option>\n            </NativeSelect>\n          </React.Fragment>\n          }\n          <Button type=\"submit\" variant=\"contained\" disabled={ !this.state.saveable }>\n            Save\n          </Button>\n        </form>\n    )\n  }\n}\n\nconst styles = {\n  form: {\n    style: {\n      maxWidth: '800px',\n      height: '100vh',\n      margin: '0 auto',\n      padding: '16px',\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      justifyContent: 'center',\n      boxSizing: 'border-box'\n    }\n  },\n  name: {\n    style: {\n      margin: '8px 0',\n      fontSize: '1.618rem'\n    }\n  },\n  input: {\n    style: {\n      margin: '8px 0',\n      overflow: 'hidden',\n      width: '100%'\n    }\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  saveDoable: doable => dispatch(saveDoable(doable))\n});\n\nexport default connect(null, mapDispatchToProps)(DoableForm);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport SwipeableView from 'react-swipeable-views';\nimport DoableForm from './DoableForm';\n\nexport function ReviewSection (props) {\n\n  // Reviewabls are Doables that need reviewing\n  const renderReviewables = doables => {\n    return doables.map( (doable, i) =>\n      <DoableForm key={doable.id} data={doable} /> );\n  }\n\n  return (\n    <SwipeableView enableMouseEvents>\n      { renderReviewables(props.reviewables) }\n    </SwipeableView>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  reviewables:  state.doables.filter( doable => doable.area === '')\n});\n\nconst mapDispatchToProps = () => ({\n\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ReviewSection);\n","import React from 'react';\n\nexport function Area (props) {\n\n  const renderDoables = doables => {\n    return doables.map( doable => <li key={doable.id}>{doable.name}</li>)\n  }\n\n  return <div {...styles.container}>\n    <ul>\n      { renderDoables(props.doables) }\n    </ul>\n  </div>;\n}\n\nconst styles = {\n  container: {\n    style: {\n      maxWidth: '800px',\n      height: '100vh',\n      margin: '0 auto',\n      padding: '16px',\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      justifyContent: 'center',\n      boxSizing: 'border-box'\n    }\n  }\n}\n\nexport default Area;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport SwipeableView from 'react-swipeable-views';\nimport { virtualize } from 'react-swipeable-views-utils';\nimport { mod } from 'react-swipeable-views-core';\nimport Area from './Area';\n\nexport function AreaSection (props) {\n  const renderAreas = ({doables, areas}) => {\n    return [...areas].map( area => <Area\n      key={area}\n      doables={doables.filter( doable => doable.area === area )}\n    />);\n  }\n\n\n  return (\n    <SwipeableView enableMouseEvents>\n      { renderAreas(props) }\n    </SwipeableView>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  areas: new Set(state.doables.map( doable => doable.area ).filter( area => !!area)),\n  doables: state.doables\n});\n\nconst mapDispatchToProps = () => ({});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AreaSection);\n","import React from 'react';\nimport SwipeableView from 'react-swipeable-views';\nimport DoableForm from './components/DoableForm';\nimport ReviewSection from './components/ReviewSection';\nimport AreaSection from './components/AreaSection';\n\nfunction App () {\n\n  return (\n    <SwipeableView axis=\"y\" containerStyle={{height: '100vh'}}>\n      <DoableForm type=\"quickEntry\" autofocus />\n      <ReviewSection />\n      <AreaSection />\n    </SwipeableView>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport reducers from './reducers'\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst store = createStore(reducers, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}